<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:ResourceString="clr-namespace:Microsoft.Research.Wwt.TileGenerator.Properties"
    xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" mc:Ignorable="d">
    <SolidColorBrush x:Key="LightBlueBrush" Color="#FFF0F7FB"/>
    <SolidColorBrush x:Key="HeaderBlueBrush" Color="#FF38527C"/>
    <SolidColorBrush x:Key="GreenBrush" Color="#FF63AD39"/>
    <SolidColorBrush x:Key="ForegroundBlueBrush" Color="#FF596D82"/>
    <ResourceString:Resources x:Key="ResourceKeyStrings"></ResourceString:Resources>
    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <DataTemplate x:Key="MultiLineToolTipTemplate">
        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
    </DataTemplate>
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="MaxWidth" Value="260"/>
        <Setter Property="Foreground" Value="#FF666666"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
          Background="{StaticResource LightBrush}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          BorderThickness="1"
          Width="{TemplateBinding Width}"
          Height="{TemplateBinding Height}">
                        <ContentPresenter ContentTemplate="{StaticResource MultiLineToolTipTemplate}"
            Margin="4" 
            HorizontalAlignment="Left"
            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="2"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeaderBGControl" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" x:Name="Row1"/>
                            <RowDefinition Height="4" x:Name="Row2"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="BlueRect" HorizontalAlignment="Stretch" Width="Auto" Fill="{DynamicResource HeaderBlueBrush}" Grid.ColumnSpan="3"/>
                        <Rectangle x:Name="Glow" HorizontalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="3">
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusY="1.545" Center="0.542,1.069" GradientOrigin="0.542,1.069">
                                    <GradientStop Color="#FF346EA5" Offset="0.003"/>
                                    <GradientStop Color="#0007457E" Offset="1"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="GreenLine" Fill="{DynamicResource GreenBrush}" HorizontalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="3"/>
                        <Image x:Name="image" Source="/Resources/Images/TileGeneratorLogo.png" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Width="64"/>
                        <TextBlock x:Name="contentText" Text="{TemplateBinding Content}" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" FontSize="34.667" FontFamily="Segoe UI" Grid.Column="2"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Bottom">
                            <Setter Property="Height" Value="4" TargetName="Row1"/>
                            <Setter Property="Height" Value="*" TargetName="Row2"/>
                            <Setter Property="Grid.Row" Value="1" TargetName="BlueRect"/>
                            <Setter Property="Grid.Row" Value="0" TargetName="GreenLine"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="contentText"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="PopupHeader">
                            <Setter TargetName="contentText" Property="FontSize" Value="14"/>
                            <Setter TargetName="contentText" Property="Margin" Value="-5,4,0,5"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <LinearGradientBrush x:Key="GrayButtonGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFD7D7D7" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ImageContainerDefaultGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBECEC" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonMouseoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD8F0FF" Offset="0.253"/>
        <GradientStop Color="#FF9FC3D6" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="#FFD5E9F3"/>
    <Style x:Key="ImageContentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="borderRectangle" RadiusX="6" RadiusY="6" Fill="{DynamicResource ForegroundBlueBrush}" Opacity="0.2"/>
                        <Border x:Name="border" BorderBrush="#FFA4ACB3" BorderThickness="1" Margin="4" CornerRadius="6" UseLayoutRounding="True" SnapsToDevicePixels="True" Padding="10,0" Background="{DynamicResource GrayButtonGradientBrush}">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" x:Name="LeftImageColumn"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" x:Name="RightImageColumn"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="IconContianer" BorderBrush="#FFEBECEC" BorderThickness="2" Grid.Column="0" Width="27" Height="27" CornerRadius="20" Background="{DynamicResource ImageContainerDefaultGradientBrush}">
                                    <Image  Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <TextBlock FontFamily="Segoe UI" x:Name="ContentText" Grid.Column="1" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Height" Foreground="{DynamicResource ForegroundBlueBrush}" FontSize="18" Margin="10,0,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right">
                            <Setter Property="Grid.Column" Value="2" TargetName="IconContianer"/>
                            <Setter Property="Margin" Value="0,0,10,0" TargetName="ContentText"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonMouseoverBrush}"/>
                            <Setter Property="Background" TargetName="IconContianer" Value="{DynamicResource GrayButtonGradientBrush}"/>
                            <Setter Property="BorderBrush" TargetName="IconContianer" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonPressedBrush}"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="ContentText" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="borderRectangle" Value="0.1"/>
                            <Setter Property="Fill" TargetName="borderRectangle" Value="{DynamicResource CheckBoxStroke}"/>
                            <Setter Property="Foreground" TargetName="ContentText" Value="{DynamicResource ButtonNormalBorder}"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TitleForegroundBrush" Color="#FF425B83"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="#FF979797"/>
    <Thickness x:Key="TopTwentyMargin">0,20,0,0</Thickness>
    <LinearGradientBrush x:Key="ComboboxBGBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFD9E8F3" Offset="0"/>
        <GradientStop Color="#FFAAC5E3" Offset="1"/>
    </LinearGradientBrush>
    <Thickness x:Key="ContentTiltleMargin">0,15,0,0</Thickness>
    <Thickness x:Key="ContentItemMargin">0,5,0,0</Thickness>
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextboxBGBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8F8F8" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TextboxBorderBrush" Color="#FFBECEE5"/>
    <CornerRadius x:Key="CornerRadius">6</CornerRadius>
    <SolidColorBrush x:Key="TextboxMouseoverBrush" Color="#FF8ABEED"/>
    <Style x:Key="InputTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBlueBrush}"/>
        <Setter Property="Background" Value="{DynamicResource TextboxBGBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextboxBorderBrush}"/>
        <Setter Property="Height" Value="{DynamicResource Step2ItemHeight}"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="FontSize" Value="{DynamicResource LabelFontsize}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="{DynamicResource CornerRadius}" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" UseLayoutRounding="True" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Margin="3,0,5,0"/>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="CharacterCasing" Value="Normal"/>

                        <Trigger Property="CharacterCasing" Value="Normal"/>
                        <Trigger Property="Tag" Value="MultilineText">
                            <Setter Property="VerticalAlignment" Value="Stretch" TargetName="PART_ContentHost"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Stretch">
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Message">
                            <Setter Property="VerticalAlignment" Value="Stretch" TargetName="PART_ContentHost"/>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextboxMouseoverBrush}"/>
                        </Trigger>

                        <Trigger Property="Tag" Value="Error">
                            <Setter Property="BorderBrush" Value="{DynamicResource ErrorRed}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="1"/>
                        </Trigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="Error"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ErrorMouseOverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#0C4B6083"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <System:Double x:Key="InputdetailsWidth">160</System:Double>
    <System:Double x:Key="LabelFontsize">16</System:Double>
    <System:Double x:Key="Step2ItemHeight">30</System:Double>
    <System:Double x:Key="TextBoxWidth">260</System:Double>
    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="labelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="{DynamicResource LabelFontsize}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBlueBrush}"/>
    </Style>
    <Style x:Key="CreateCheckboxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="30"/>
                         
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" CornerRadius="{DynamicResource CornerRadius}" BorderThickness="2" BorderBrush="{DynamicResource TextboxBorderBrush}" Background="{DynamicResource TextboxBGBrush}" Grid.Column="0"/>
                        <TextBlock x:Name="tick" TextWrapping="Wrap" Text="ü" d:LayoutOverrides="Width, Height" FontFamily="Wingdings" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="37.333" Foreground="{DynamicResource ForegroundBlueBrush}" Visibility="Collapsed" Margin="3,5,0,0"/>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="tick" Value="Visible"/>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextboxMouseoverBrush}"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="SplitterLineBrush" Color="#19000000"/>
    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock ToolTip="{x:Null}"  Text="{TemplateBinding Content}"   Margin="0,0,0,4" Style="{DynamicResource labelStyle}"/>
                        <TextBlock x:Name="textBlock" FontSize="11" Foreground="#FF3DAADC" Grid.Column="1" ToolTip="{TemplateBinding ToolTip}"
                                   Text="{Binding Path=WhatsThisText, Source={StaticResource ResourceKeyStrings}}" Margin="7,0,0,6" VerticalAlignment="Bottom" Cursor="Help"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextDecorations" TargetName="textBlock" Value="None"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="WhiteBrush" Color="White"/>
    <LinearGradientBrush x:Key="BlueGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF084E80" Offset="1"/>
        <GradientStop Color="#FF386BA1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="OrangeGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBA6F00" Offset="1"/>
        <GradientStop Color="#FFE97829"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BrownSolidBrush" Color="#FFAD6003"/>
    <Style x:Key="BlueImageButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="UseLayoutRounding" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="#FFC7C7C7" BorderThickness="2" Margin="2" CornerRadius="6" UseLayoutRounding="True" SnapsToDevicePixels="True" Padding="2,0" Background="{DynamicResource BlueGradientBrush}">
                            <Image Width="18" Stretch="Uniform" Grid.ColumnSpan="2" Grid.Column="1" Height="4" VerticalAlignment="Bottom" Margin="2,0,2,5" Source="/Resources/Images/Dots.png" />

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeGradientBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BrownSolidBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SplitterControl" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle   Fill="{DynamicResource ForegroundBlueBrush}" Opacity="0.2" Width="1"/>
                        <Rectangle  Width="1" Fill="White"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Wizardnumber" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Ellipse Width="48" Height="48" Fill="#FFD5DDE7"/>
                        <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" Style="{DynamicResource labelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="37.333" Foreground="{DynamicResource WhiteBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SteptitleStyle" TargetType="{x:Type TextBlock}">

        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleForegroundBrush}"/>
        <Setter Property="FontSize" Value="24"/>

    </Style>
    <Style x:Key="titleDescStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="{DynamicResource LightGrayBrush}"/>
        <Setter Property="FontSize" Value="12"/>

    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="SectionHeaderLabelstyle">

        <Setter Property="Foreground" Value="{DynamicResource TitleForegroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#BABABA" Offset="0"/>
        <GradientStop Color="#C7C7C7" Offset="0.5"/>
        <GradientStop Color="#BABABA" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#B2B2B2" Offset="0"/>
        <GradientStop Color="#8C8C8C" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.545"/>
        <GradientStop Color="#05FFFFFF" Offset="0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarTopHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#80FFFFFF" Offset="0.05"/>
        <GradientStop Color="#00FFFFFF" Offset="0.25"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" Opacity="0.5" >
        <GradientStop Color="Transparent" Offset="1"/>
        <GradientStop Color="#99FFFFFF"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#0C000000" Offset="0"/>
        <GradientStop Color="#20000000" Offset="0.3"/>
        <GradientStop Color="#00000000" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#20000000" Offset="0.7"/>
        <GradientStop Color="#0C000000" Offset="1"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,0.5,0.5">
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,-0.5,0.5">
        <GradientStop Color="#60FFFFC4" Offset="0"/>
        <GradientStop Color="#00FFFFC4" Offset="1"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
        <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlueTransGradientBrush" EndPoint="0.511,0.493" StartPoint="0.022,0.512">
        <GradientStop Offset="0.988"/>
        <GradientStop Color="#FFCDE1EB" Offset="0.154"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarAniamtedBrush" >
        <GradientStop Offset="1"/>
        <GradientStop Color="#FFECF9FF" Offset="0"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="GlowRect" RadiusY="1.535" RadiusX="0.399">
        <GradientStop Offset="1" Color="#00F9EAA3"/>
        <GradientStop Color="#FF98E1F9" Offset="0"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="ErrorMouseOverBrush" Color="DarkOrange"/>
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Tag" Value="Processing"/>
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Animation" RepeatBehavior="Forever">
                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="path_Copy">
                                <EasingPointKeyFrame KeyTime="0:0:0.4" Value="-0.002,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:0.8" Value="0.5,1"/>
                                <EasingPointKeyFrame KeyTime="0:0:1.2" Value="1.002,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:1.6" Value="0.5,0"/>
                            </PointAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="path_Copy">
                                <EasingPointKeyFrame KeyTime="0:0:0.4" Value="1.002,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:0.8" Value="0.5,0"/>
                                <EasingPointKeyFrame KeyTime="0:0:1.2" Value="-0.002,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:1.6" Value="0.5,1"/>
                            </PointAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid  x:Name="TemplateRoot" SnapsToDevicePixels="true">
             
                        <Border x:Name="border" CornerRadius="{DynamicResource CornerRadius}" BorderThickness="2" BorderBrush="{DynamicResource TextboxBorderBrush}" UseLayoutRounding="True" Background="{DynamicResource TextboxBGBrush}">
                            <Border x:Name="PART_Indicator" BorderBrush="{x:Null}" CornerRadius="5" HorizontalAlignment="Stretch" OpacityMask="{DynamicResource ButtonNormalBackground}" Background="{DynamicResource GrayButtonGradientBrush}"/>
                        </Border>
                        <Rectangle x:Name="PART_Track" Margin="1"/>
                        <StackPanel Orientation="Horizontal" d:LayoutOverrides="Height" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Canvas Visibility="Collapsed" x:Name="canvas" HorizontalAlignment="Stretch" Margin="0" Width="23.888" RenderTransformOrigin="0.5,0.5" Height="24">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Path x:Name="path" Data="M11.74,18.416 C13.281979,18.416 14.532,19.666021 14.532,21.208 14.532,22.749979 13.281979,24 11.74,24 10.198021,24 8.948,22.749979 8.9480002,21.208 8.948,19.666021 10.198021,18.416 11.74,18.416 z M17.324,14.634 C18.865979,14.634 20.116,15.884021 20.116,17.426001 20.116,18.967979 18.865979,20.218 17.324,20.218 15.782021,20.218 14.532,18.967979 14.532,17.426001 14.532,15.884021 15.782021,14.634 17.324,14.634 z M5.3339999,14.634 C6.8759789,14.634 8.1259999,15.884021 8.126,17.426001 8.1259999,18.967979 6.8759789,20.218 5.3339999,20.218 3.7920208,20.218 2.5419998,18.967979 2.5419998,17.426001 2.5419998,15.884021 3.7920208,14.634 5.3339999,14.634 z M21.096,9.0500003 C22.637979,9.0500003 23.888,10.300021 23.888,11.842 23.888,13.383979 22.637979,14.634 21.096,14.634 19.554021,14.634 18.304,13.383979 18.304,11.842 18.304,10.300021 19.554021,9.0500003 21.096,9.0500003 z M2.7919998,9.0500003 C4.3339787,9.0500003 5.5839999,10.300021 5.5839996,11.842 5.5839999,13.383979 4.3339787,14.634 2.7919998,14.634 1.250021,14.634 0,13.383979 0,11.842 0,10.300021 1.250021,9.0500003 2.7919998,9.0500003 z M18.147,2.5000001 C19.688979,2.5000001 20.939,3.750021 20.939,5.2919999 20.939,6.8339792 19.688979,8.0839997 18.147,8.0839997 16.605021,8.0839997 15.355,6.8339792 15.355,5.2919999 15.355,3.750021 16.605021,2.5000001 18.147,2.5000001 z M5.3339999,2.5000001 C6.8759789,2.5000001 8.1259999,3.750021 8.126,5.2919999 8.1259999,6.8339792 6.8759789,8.0839997 5.3339999,8.0839997 3.7920208,8.0839997 2.5419998,6.8339792 2.5419998,5.2919999 2.5419998,3.750021 3.7920208,2.5000001 5.3339999,2.5000001 z M11.74,0 C13.281979,6.0641483E-08 14.532,1.250021 14.532,2.7920001 14.532,4.3339792 13.281979,5.5840002 11.74,5.5840002 10.198021,5.5840002 8.948,4.3339792 8.9479998,2.7920001 8.948,1.250021 10.198021,6.0641483E-08 11.74,0 z" Fill="#FFD2D2D2" HorizontalAlignment="Stretch" Height="24" Margin="0" RenderTransformOrigin="0.491460155012801,0.116333335566119" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="23.888" Opacity="0.3">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="path_Copy" Data="M11.74,18.416 C13.281979,18.416 14.532,19.666021 14.532,21.208 14.532,22.749979 13.281979,24 11.74,24 10.198021,24 8.948,22.749979 8.9480002,21.208 8.948,19.666021 10.198021,18.416 11.74,18.416 z M17.324,14.634 C18.865979,14.634 20.116,15.884021 20.116,17.426001 20.116,18.967979 18.865979,20.218 17.324,20.218 15.782021,20.218 14.532,18.967979 14.532,17.426001 14.532,15.884021 15.782021,14.634 17.324,14.634 z M5.3339999,14.634 C6.8759789,14.634 8.1259999,15.884021 8.126,17.426001 8.1259999,18.967979 6.8759789,20.218 5.3339999,20.218 3.7920208,20.218 2.5419998,18.967979 2.5419998,17.426001 2.5419998,15.884021 3.7920208,14.634 5.3339999,14.634 z M21.096,9.0500003 C22.637979,9.0500003 23.888,10.300021 23.888,11.842 23.888,13.383979 22.637979,14.634 21.096,14.634 19.554021,14.634 18.304,13.383979 18.304,11.842 18.304,10.300021 19.554021,9.0500003 21.096,9.0500003 z M2.7919998,9.0500003 C4.3339787,9.0500003 5.5839999,10.300021 5.5839996,11.842 5.5839999,13.383979 4.3339787,14.634 2.7919998,14.634 1.250021,14.634 0,13.383979 0,11.842 0,10.300021 1.250021,9.0500003 2.7919998,9.0500003 z M18.147,2.5000001 C19.688979,2.5000001 20.939,3.750021 20.939,5.2919999 20.939,6.8339792 19.688979,8.0839997 18.147,8.0839997 16.605021,8.0839997 15.355,6.8339792 15.355,5.2919999 15.355,3.750021 16.605021,2.5000001 18.147,2.5000001 z M5.3339999,2.5000001 C6.8759789,2.5000001 8.1259999,3.750021 8.126,5.2919999 8.1259999,6.8339792 6.8759789,8.0839997 5.3339999,8.0839997 3.7920208,8.0839997 2.5419998,6.8339792 2.5419998,5.2919999 2.5419998,3.750021 3.7920208,2.5000001 5.3339999,2.5000001 z M11.74,0 C13.281979,6.0641483E-08 14.532,1.250021 14.532,2.7920001 14.532,4.3339792 13.281979,5.5840002 11.74,5.5840002 10.198021,5.5840002 8.948,4.3339792 8.9479998,2.7920001 8.948,1.250021 10.198021,6.0641483E-08 11.74,0 z" Fill="#FF5D98CC" HorizontalAlignment="Stretch" Height="24" Margin="0" RenderTransformOrigin="0.491460155012801,0.116333335566119" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="23.888">
                                    <Path.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </LinearGradientBrush>
                                    </Path.OpacityMask>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Canvas>
                            <Image Visibility="Collapsed" x:Name="image" Height="24"  Stretch="UniformToFill" Width="24" RenderTransformOrigin="0.5,0.5" d:IsHidden="True" >
                               
                            </Image>
                            <TextBlock Margin="3,0,0,0" FontSize="14" x:Name="txtBlock" HorizontalAlignment="Center" TextWrapping="Wrap" 
                                       Text="{Binding Path=ProcessingText, Source={StaticResource ResourceKeyStrings}}" 
                                       d:LayoutOverrides="Height" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="true">
                           <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Animation_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Animation_BeginStoryboard" Storyboard="{StaticResource Animation}"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="Tag" Value="Processing">
                            <Setter Property="Visibility" Value="Visible" TargetName="canvas"/>
                            <Setter Property="IsIndeterminate" Value="True"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>                     
                            <Setter Property="Text" Value="{Binding Path=ProcessingText, Source={StaticResource ResourceKeyStrings}}" TargetName="txtBlock"/>
                        </Trigger>

                        <Trigger Property="Tag" Value="Success">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="canvas"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="image"/>
                            <Setter Property="IsIndeterminate" Value="False"/>
                            <Setter Property="Source" Value="/Resources/Images/Success.png" TargetName="image"/>
                            <Setter Property="Text" Value="{Binding PyramidGenerationMessage}" TargetName="txtBlock"/>
                            <Setter TargetName="txtBlock" Property="Foreground" Value="#FF18760B"/>
                            
                        </Trigger>
                        <Trigger Property="Tag" Value="Error">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="canvas"/>
                            <Setter Property="IsIndeterminate" Value="False"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="image"/>
                            <Setter Property="Source" Value="/Resources/Images/Error.png" TargetName="image"/>
                            <Setter Property="Text" Value="{Binding PyramidGenerationMessage}" TargetName="txtBlock"/>
                            <Setter TargetName="txtBlock" Property="Foreground" Value="{DynamicResource ErrorRed}"/>
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                     
                 
                     
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="#FFC7C7C7" BorderThickness="3" CornerRadius="6" UseLayoutRounding="True" SnapsToDevicePixels="True" Padding="10,0" Background="{DynamicResource BlueGradientBrush}">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" x:Name="LeftImageColumn"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" x:Name="RightImageColumn"/>
                                </Grid.ColumnDefinitions>

                                <Ellipse Fill="{DynamicResource ImageContainerDefaultGradientBrush}" Width="18" Height="17" Stroke="#FFEBECEC" StrokeThickness="2"/>
                                <Image  Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="12" Height="12" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                                <TextBlock x:Name="ContentText" Grid.Column="1" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Height" Foreground="{DynamicResource WhiteBrush}" FontSize="12" Margin="10,0,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right">
                            <Setter Property="Margin" Value="0,0,10,0" TargetName="ContentText"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource OrangeGradientBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BrownSolidBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StepControl" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">

                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse Width="24" Height="24" Fill="#FFD5DDE7"/>
                        <TextBlock  Text="{TemplateBinding Tag}" d:LayoutOverrides="Width, Height" Style="{DynamicResource labelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14.667" Foreground="{DynamicResource ForegroundBlueBrush}"/>
                        <TextBlock  Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" Style="{DynamicResource labelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14.667" Foreground="{DynamicResource ForegroundBlueBrush}" Grid.Column="1" Margin="5,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSeperator" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <StackPanel Orientation="Vertical">
                        <Rectangle   Fill="{DynamicResource ForegroundBlueBrush}" Opacity="0.2" Width="Auto" Height="1"/>
                        <Rectangle  Width="Auto" Fill="White" Height="1"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ErrorRed" Color="#FFFF3824"/>
    <Style x:Key="ErrorTBStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5,2,0,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{DynamicResource ErrorRed}"/>
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="Tag" Value="Error"/>
            </Trigger>
        </Style.Triggers>
    </Style>
  
    <LinearGradientBrush x:Key="CloseButtonBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBE4A07" Offset="1"/>
        <GradientStop Color="#FFCC0000" Offset="0.505"/>
        <GradientStop Color="#FFA33E04"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MinimizeBlueBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF0065D6" Offset="1"/>
        <GradientStop Color="#FF006ACC" Offset="0.505"/>
        <GradientStop Color="#FF006AAD"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="BlueGlowBrush" Center="0.469,1.135" GradientOrigin="0.469,1.135" RadiusY="1.809" RadiusX="1.286">
        <GradientStop Color="#FF7ACEF1" Offset="0.095"/>
        <GradientStop Color="#00EFF8FF" Offset="1"/>
        <GradientStop Color="#36ECF6FF" Offset="0.771"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="RedGlowBrush" Center="0.469,1.135" GradientOrigin="0.469,1.135" RadiusY="1.809" RadiusX="1.286">
        <GradientStop Color="#FFFB6C6C" Offset="0.04"/>
        <GradientStop Color="#00EFF8FF" Offset="1"/>
        <GradientStop Color="#36ECF6FF" Offset="0.771"/>
    </RadialGradientBrush>
    <Style x:Key="MinimizeCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="BGBorder" CornerRadius="0,0,0,6" UseLayoutRounding="True" SnapsToDevicePixels="True" Visibility="Visible" BorderThickness="0,0,1,0" >
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#F3F3F3" Offset="0"/>
                                    <GradientStop Color="#EBEBEB" Offset="0.5"/>
                                    <GradientStop Color="#DDDDDD" Offset="0.5"/>
                                    <GradientStop Color="#CDCDCD" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border  x:Name="MouseOverBorder" CornerRadius="0,0,0,6" UseLayoutRounding="True" SnapsToDevicePixels="True" Visibility="Collapsed" Background="{DynamicResource BlueGlowBrush}" />

                        <Border x:Name="border" CornerRadius="0,0,0,7" UseLayoutRounding="True" SnapsToDevicePixels="True" Background="{DynamicResource ProgressBarGlassyHighlight}" BorderBrush="#FFB2B2B2" BorderThickness="0,0,1,0">
                            <Grid VerticalAlignment="Stretch">
                                <Path x:Name="minimizePath" Data="M3,9.2206774 L9,9.2206774 L9,10.720677 L3,10.720677 z" HorizontalAlignment="Center" Height="3" Margin="0,0,0,5" RenderTransformOrigin="0.5,0.5" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="9">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF565656" Offset="1"/>
                                            <GradientStop Color="#FF818181"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="closePath" Data="M2.0976563,2.2831774 L3.2578125,2.2831774 L6.0351563,5.0605211 L8.8476563,2.2831774 L9.9726563,2.2831774 L9.9726563,3.4433336 L7.1953125,6.2206774 L9.9726563,8.9980211 L9.9726563,10.158177 L8.8476563,10.158177 L6.0351563,7.3808336 L3.2578125,10.158177 L2.0976563,10.158177 L2.0976563,9.0331774 L4.875,6.2206774 L2.0976563,3.4433336 z" HorizontalAlignment="Center" Height="9" RenderTransformOrigin="0.5,0.5" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="9" Visibility="Collapsed">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF565656" Offset="1"/>
                                            <GradientStop Color="#FF818181"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BGBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Close">

                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,6,0"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="CornerRadius" TargetName="BGBorder" Value="0,0,6,0"/>
                            <Setter Property="CornerRadius" TargetName="MouseOverBorder" Value="0,0,6,0"/>
                            <Setter Property="Background" TargetName="MouseOverBorder" Value="{DynamicResource RedGlowBrush}"/>
                            <Setter Property="Visibility" TargetName="BGBorder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="minimizePath" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="closePath" Value="Visible"/>



                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>


            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnimatedProgressbarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2"/>
                        <Border Background="{StaticResource ProgressBarGlassyHighlight}" CornerRadius="2" Margin="1"/>
                        <Border BorderBrush="#80FFFFFF" BorderThickness="1,0,1,1" Background="{StaticResource ProgressBarTopHighlight}" Margin="1"/>
                        <Rectangle x:Name="PART_Track" Margin="1"/>
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Grid x:Name="Animation" ClipToBounds="true">
                                    <Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100"/>
                                </Grid>
                                <Grid x:Name="Overlay">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="15"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition MaxWidth="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="LeftDark" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="RightDark" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="LeftLight" Grid.Column="0" Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}" Grid.Row="2"/>
                                    <Rectangle x:Name="CenterLight" Grid.Column="1" Fill="{StaticResource ProgressBarIndicatorLightingEffect}" Grid.Row="2"/>
                                    <Rectangle x:Name="RightLight" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}" Grid.Row="2"/>
                                    <Border x:Name="Highlight1" Background="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                    <Border x:Name="Highlight2" Background="{StaticResource ProgressBarTopHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                </Grid>
                            </Grid>
                        </Decorator>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BusyIndicatorStyle" TargetType="{x:Type extToolkit:BusyIndicator}">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="0:0:0.01"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extToolkit:BusyIndicator}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard RepeatBehavior="Forever">
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.000" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(LinearGradientBrush.StartPoint)" Storyboard.TargetName="path_Copy">
                                            <EasingPointKeyFrame KeyTime="0:0:0.4" Value="-0.002,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:0.8" Value="0.5,1"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.2" Value="1.002,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.6" Value="0.5,0"/>
                                        </PointAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(LinearGradientBrush.EndPoint)" Storyboard.TargetName="path_Copy">
                                            <EasingPointKeyFrame KeyTime="0:0:0.4" Value="1.002,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:0.8" Value="0.5,0"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.2" Value="-0.002,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.6" Value="0.5,1"/>
                                        </PointAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}"/>

                        <Grid x:Name="busycontent" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Border x:Name="border" CornerRadius="{DynamicResource CornerRadius}" BorderThickness="2" BorderBrush="{DynamicResource TextboxBorderBrush}" UseLayoutRounding="True" Background="{DynamicResource TextboxBGBrush}">
                                <Border  BorderBrush="{x:Null}" CornerRadius="5" HorizontalAlignment="Stretch" OpacityMask="{DynamicResource ButtonNormalBackground}" Background="{DynamicResource GrayButtonGradientBrush}">


                                    <Grid MinWidth="150">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Margin="8" Orientation="Horizontal" d:LayoutOverrides="Height" HorizontalAlignment="Center">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Stretch" Margin="0" Width="23.888" RenderTransformOrigin="0.5,0.5" Height="24">
                                                <Canvas.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Canvas.RenderTransform>
                                                <Path x:Name="path" Data="M11.74,18.416 C13.281979,18.416 14.532,19.666021 14.532,21.208 14.532,22.749979 13.281979,24 11.74,24 10.198021,24 8.948,22.749979 8.9480002,21.208 8.948,19.666021 10.198021,18.416 11.74,18.416 z M17.324,14.634 C18.865979,14.634 20.116,15.884021 20.116,17.426001 20.116,18.967979 18.865979,20.218 17.324,20.218 15.782021,20.218 14.532,18.967979 14.532,17.426001 14.532,15.884021 15.782021,14.634 17.324,14.634 z M5.3339999,14.634 C6.8759789,14.634 8.1259999,15.884021 8.126,17.426001 8.1259999,18.967979 6.8759789,20.218 5.3339999,20.218 3.7920208,20.218 2.5419998,18.967979 2.5419998,17.426001 2.5419998,15.884021 3.7920208,14.634 5.3339999,14.634 z M21.096,9.0500003 C22.637979,9.0500003 23.888,10.300021 23.888,11.842 23.888,13.383979 22.637979,14.634 21.096,14.634 19.554021,14.634 18.304,13.383979 18.304,11.842 18.304,10.300021 19.554021,9.0500003 21.096,9.0500003 z M2.7919998,9.0500003 C4.3339787,9.0500003 5.5839999,10.300021 5.5839996,11.842 5.5839999,13.383979 4.3339787,14.634 2.7919998,14.634 1.250021,14.634 0,13.383979 0,11.842 0,10.300021 1.250021,9.0500003 2.7919998,9.0500003 z M18.147,2.5000001 C19.688979,2.5000001 20.939,3.750021 20.939,5.2919999 20.939,6.8339792 19.688979,8.0839997 18.147,8.0839997 16.605021,8.0839997 15.355,6.8339792 15.355,5.2919999 15.355,3.750021 16.605021,2.5000001 18.147,2.5000001 z M5.3339999,2.5000001 C6.8759789,2.5000001 8.1259999,3.750021 8.126,5.2919999 8.1259999,6.8339792 6.8759789,8.0839997 5.3339999,8.0839997 3.7920208,8.0839997 2.5419998,6.8339792 2.5419998,5.2919999 2.5419998,3.750021 3.7920208,2.5000001 5.3339999,2.5000001 z M11.74,0 C13.281979,6.0641483E-08 14.532,1.250021 14.532,2.7920001 14.532,4.3339792 13.281979,5.5840002 11.74,5.5840002 10.198021,5.5840002 8.948,4.3339792 8.9479998,2.7920001 8.948,1.250021 10.198021,6.0641483E-08 11.74,0 z" Fill="#FFD2D2D2" HorizontalAlignment="Stretch" Height="24" Margin="0" RenderTransformOrigin="0.491460155012801,0.116333335566119" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="23.888" Opacity="0.3">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Path x:Name="path_Copy" Data="M11.74,18.416 C13.281979,18.416 14.532,19.666021 14.532,21.208 14.532,22.749979 13.281979,24 11.74,24 10.198021,24 8.948,22.749979 8.9480002,21.208 8.948,19.666021 10.198021,18.416 11.74,18.416 z M17.324,14.634 C18.865979,14.634 20.116,15.884021 20.116,17.426001 20.116,18.967979 18.865979,20.218 17.324,20.218 15.782021,20.218 14.532,18.967979 14.532,17.426001 14.532,15.884021 15.782021,14.634 17.324,14.634 z M5.3339999,14.634 C6.8759789,14.634 8.1259999,15.884021 8.126,17.426001 8.1259999,18.967979 6.8759789,20.218 5.3339999,20.218 3.7920208,20.218 2.5419998,18.967979 2.5419998,17.426001 2.5419998,15.884021 3.7920208,14.634 5.3339999,14.634 z M21.096,9.0500003 C22.637979,9.0500003 23.888,10.300021 23.888,11.842 23.888,13.383979 22.637979,14.634 21.096,14.634 19.554021,14.634 18.304,13.383979 18.304,11.842 18.304,10.300021 19.554021,9.0500003 21.096,9.0500003 z M2.7919998,9.0500003 C4.3339787,9.0500003 5.5839999,10.300021 5.5839996,11.842 5.5839999,13.383979 4.3339787,14.634 2.7919998,14.634 1.250021,14.634 0,13.383979 0,11.842 0,10.300021 1.250021,9.0500003 2.7919998,9.0500003 z M18.147,2.5000001 C19.688979,2.5000001 20.939,3.750021 20.939,5.2919999 20.939,6.8339792 19.688979,8.0839997 18.147,8.0839997 16.605021,8.0839997 15.355,6.8339792 15.355,5.2919999 15.355,3.750021 16.605021,2.5000001 18.147,2.5000001 z M5.3339999,2.5000001 C6.8759789,2.5000001 8.1259999,3.750021 8.126,5.2919999 8.1259999,6.8339792 6.8759789,8.0839997 5.3339999,8.0839997 3.7920208,8.0839997 2.5419998,6.8339792 2.5419998,5.2919999 2.5419998,3.750021 3.7920208,2.5000001 5.3339999,2.5000001 z M11.74,0 C13.281979,6.0641483E-08 14.532,1.250021 14.532,2.7920001 14.532,4.3339792 13.281979,5.5840002 11.74,5.5840002 10.198021,5.5840002 8.948,4.3339792 8.9479998,2.7920001 8.948,1.250021 10.198021,6.0641483E-08 11.74,0 z" Fill="#FF5D98CC" HorizontalAlignment="Stretch" Height="24" Margin="0" RenderTransformOrigin="0.491460155012801,0.116333335566119" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Stretch" Width="23.888">
                                                    <Path.OpacityMask>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="Black" Offset="0"/>
                                                            <GradientStop Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Path.OpacityMask>
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Canvas>
                                            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding BusyContent}" VerticalAlignment="Center" FontSize="16" Foreground="#FF0B5676" Margin="5,0,0,2"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
